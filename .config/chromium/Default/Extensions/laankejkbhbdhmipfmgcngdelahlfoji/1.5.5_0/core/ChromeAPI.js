define(function(){return{initAPI:function(t){t.mixin("Chrome",{Extension:{addListener:this.exists("runtime")?this.addRuntimeListener.bind(this):this.throwMisusedAPIException,connect:this.exists("runtime")?chrome.runtime.connect.bind(chrome.runtime):this.throwMisusedAPIException,getID:this.exists("runtime")?function(){return chrome.runtime.id}:this.throwMisusedAPIException,getURL:this.exists("extension")?chrome.extension.getURL.bind(chrome.extension):this.throwMisusedAPIException,reload:this.exists("runtime")?chrome.runtime.reload.bind(chrome.runtime):this.throwMisusedAPIException},Identity:{getAuthToken:this.exists("identity")?chrome.identity.getAuthToken.bind(chrome.identity):this.throwMisusedAPIException},Message:{on:this.exists("runtime")?chrome.runtime.onMessage:this.throwMisusedAPIException,send:this.exists("runtime")?chrome.runtime.sendMessage.bind(chrome.runtime):this.throwMisusedAPIException,sendToTab:this.exists("tabs")?chrome.tabs.sendMessage.bind(chrome.tabs):this.throwMisusedAPIException},Icon:{setBadgeColor:this.exists("browserAction")?chrome.browserAction.setBadgeBackgroundColor.bind(chrome.browserAction):this.throwMisusedAPIException,setBadgeText:this.exists("browserAction")?chrome.browserAction.setBadgeText.bind(chrome.browserAction):this.throwMisusedAPIException,setURL:this.exists("browserAction")?chrome.browserAction.setIcon.bind(chrome.browserAction):this.throwMisusedAPIException},Notification:{create:this.exists("notifications")?chrome.notifications.create.bind(chrome.notifications):this.throwMisusedAPIException,clear:this.exists("notifications")?chrome.notifications.clear.bind(chrome.notifications):this.throwMisusedAPIException},Storage:{addListener:this.exists("storage")?this.addStorageListener.bind(this):this.throwMisusedAPIException,getLocal:this.exists("storage")?chrome.storage.local.get.bind(chrome.storage.local):this.throwMisusedAPIException,getSync:this.exists("storage")?chrome.storage.sync.get.bind(chrome.storage.sync):this.throwMisusedAPIException,removeLocal:this.exists("storage")?chrome.storage.local.remove.bind(chrome.storage.local):this.throwMisusedAPIException,removeSync:this.exists("storage")?chrome.storage.sync.remove.bind(chrome.storage.sync):this.throwMisusedAPIException,setLocal:this.exists("storage")?chrome.storage.local.set.bind(chrome.storage.local):this.throwMisusedAPIException,setSync:this.exists("storage")?chrome.storage.sync.set.bind(chrome.storage.sync):this.throwMisusedAPIException},Tab:{addListener:this.exists("tabs")?this.addTabsListener.bind(this):this.throwMisusedAPIException,create:this.exists("tabs")?chrome.tabs.create.bind(chrome.tabs):this.throwMisusedAPIException,getAllInWindow:this.exists("tabs")?chrome.tabs.getAllInWindow.bind(chrome.tabs):this.throwMisusedAPIException,getCurrent:this.exists("tabs")?chrome.tabs.getCurrent.bind(chrome.tabs):this.throwMisusedAPIException,getSelected:this.exists("tabs")?chrome.tabs.getSelected.bind(chrome.tabs):this.throwMisusedAPIException,remove:this.exists("tabs")?chrome.tabs.remove.bind(chrome.tabs):this.throwMisusedAPIException,update:this.exists("tabs")?chrome.tabs.update.bind(chrome.tabs):this.throwMisusedAPIException},Translation:{get:this.exists("i18n")?chrome.i18n.getMessage.bind(chrome.i18n):this.throwMisusedAPIException},Window:{addListener:this.exists("windows")?this.addWindowsListener.bind(this):this.throwMisusedAPIException,getLastFocused:this.exists("windows")?chrome.windows.getLastFocused.bind(chrome.windows):this.throwMisusedAPIException}})},addRuntimeListener:function(t,e){this.addListener("runtime",t,e)},addStorageListener:function(t,e){this.addListener("storage",t,e)},addTabsListener:function(t,e){this.addListener("tabs",t,e)},addWindowsListener:function(t,e){this.addListener("windows",t,e)},addListener:function(t,e,s){"undefined"!=typeof chrome[t][e]&&chrome[t][e].addListener(s)},exists:function(t){return chrome&&"object"==typeof chrome[t]},throwMisusedAPIException:function(){throw new Error("Improper use of chrome API in content script!")}}});