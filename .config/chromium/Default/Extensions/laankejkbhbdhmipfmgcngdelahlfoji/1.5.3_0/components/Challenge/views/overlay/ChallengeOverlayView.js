define(["core/Logger","core/CoreAPI","core/vendor/jquery.min","core/vendor/Brightline.min","core/vendor/text!components/Challenge/views/overlay/overlay.tpl","components/Challenge/ChallengeView"],function(Logger,API,$,Brightline,overlayTpl,ChallengeView){return API.Class.extend(ChallengeView,{setJQuery:function(jQuery){$=jQuery||$},inject:function($container){this._parent.inject($container,this.render(overlayTpl));var self=this;API.PubSub.listen("ChallengeModel.text.set",function(){$("#challengeSource").html(self.model.getText())})},render:function(tpl){tpl=tpl||"";var template=new Brightline(tpl);return template.set("text",this.model.getText()),template.render()},bindUIHandlers:function(){var self=this,$challengeText=$("#challengeText"),$close=$("a.close"),$productivityBypass=$("#productivityBypass");$close.click(this.onCloseClicked.bind(this)),$productivityBypass.click(self.model.setProductivityBypass.bind(self.model)),$challengeText.keydown(this.onKeyDown.bind(this)),$challengeText.keyup(function(e){self.onKeyUp(e,$(this).val())})},onCloseClicked:function(){API.Chrome.Tab.getSelected(function(tab){API.Chrome.Tab.remove(tab.id)})},onKeyDown:function(e){this.model.isIgnoredKey(e.keyCode)||this.model.updateKeyCounter()},onKeyUp:function(e,inputText){if(!this.model.isIgnoredKey(e.keyCode)){if(!this.model.isRightLength(inputText))return alert(API.Chrome.Translation.get("numberOfKeysDoesNotMatch")),this.resetChallenge(),!1;if(!this.model.isCorrect(inputText))return alert(API.Chrome.Translation.get("madeAMistake")),this.resetChallenge(),!1;this.model.isComplete(inputText)&&($.modal.close(),this.resetChallenge())}},resetChallenge:function(){var $challengeText=$("#challengeText");$challengeText.val(""),$challengeText.focus(),this.model.resetKeyCounter()}})});