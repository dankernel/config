define(["core/Logger","core/CoreAPI"],function(Logger,API){return API.Class.create({view:null,model:null,construct:function(){},init:function(){this.model.init(),this.model.load(),this.view.init(),this.addListeners()},addListeners:function(){var self=this;API.PubSub.listen({message:"*.domain.add."+this.model.descriptor,async:!0,handler:function(message,payload,callback){var success=self.model.add(payload.domain);"function"==typeof callback&&callback(success)}}),API.PubSub.listen({message:"*.domain.remove."+this.model.descriptor,async:!0,handler:function(message,payload,callback){if(API.NuclearOption.isActive()&&"blocked"==API.NuclearOption.getBlockType())return alert(API.Chrome.Translation.get("cannotRemoveBlockedSiteDuringNuclearOption")),!1;if(self.model.has(payload.domain)&&API.StayFocusd.isMaxTimeAllowedExceeded())return alert(API.Chrome.Translation.get("cannotRemoveSiteOnceTimeIsUp")),!1;var success=self.model.remove(payload.domain);"function"==typeof callback&&callback(success)}}),API.PubSub.listen("*.domains.add."+this.model.descriptor,function(){self.addDomains()})},addDomains:function(){var newDomains=this.view.getNewDomains();newDomains.length>0&&this.model.addMany(newDomains)}})});