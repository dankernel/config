define(["core/Logger","core/Notification"],function(Logger,Notification){var API,NuclearOption={timer:null,interval:1,settings:{},initAPI:function(theAPI){API=theAPI,API.mixin("NuclearOption",{activate:this.activate.bind(this),isActive:this.isActive.bind(this),getBlockLength:this.getBlockLength.bind(this),getBlockType:this.getBlockType.bind(this),getContentType:this.getContentType.bind(this),getExpiration:this.getExpiration.bind(this),getFrequency:this.getFrequency.bind(this),getSecondsUntilActive:this.getSecondsUntilActive.bind(this),getSmartBomb:this.getSmartBomb.bind(this),getStartAmPm:this.getStartAmPm.bind(this),getStartHour:this.getStartHour.bind(this),getStartMin:this.getStartMin.bind(this),getStartType:this.getStartType.bind(this),saveSettings:this.saveSettings.bind(this)})},init:function(callback){this.loadSettings(),this.timer=setInterval(this.tick.bind(this),1e3*this.interval),"function"==typeof callback&&callback()},saveSettings:function(settings){this.settings=settings,settings.activeDays=[],settings.activeDays[0]="everyDay"===settings.frequency,settings.activeDays[1]=settings.frequency.indexOf("every")>-1,settings.activeDays[2]=settings.frequency.indexOf("every")>-1,settings.activeDays[3]=settings.frequency.indexOf("every")>-1,settings.activeDays[4]=settings.frequency.indexOf("every")>-1,settings.activeDays[5]=settings.frequency.indexOf("every")>-1,settings.activeDays[6]="everyDay"===settings.frequency,API.Settings.set({nuclearOptionSettings:settings}),clearInterval(this.timer),this.timer=setInterval(this.tick.bind(this),1e3*this.interval)},loadSettings:function(){var nuclearOptionSettings=API.Settings.get("nuclearOptionSettings");nuclearOptionSettings&&(this.settings=nuclearOptionSettings)},isActive:function(){this.isCurrentlyActive()?this.isExpired()&&this.deactivate():this.isStarted()&&this.activate();var isActive=this.isCurrentlyActive();return isActive},isActiveToday:function(){var frequency=this.getFrequency(),lastActiveDate=this.getLastActiveDate(),lastExpiredDate=this.getLastExpiredDate(),todayDate=(new Date).toDateString();if("todayOnly"==frequency&&(lastActiveDate===todayDate||null===lastActiveDate)&&lastExpiredDate!==todayDate)return!0;var day=(new Date).getDay(),activeDays=this.getActiveDays();return 0==activeDays.length?!1:activeDays[day]},isStarted:function(){var startType=this.getStartType(),lastActiveDate=this.getLastActiveDate(),lastExpiredDate=this.getLastExpiredDate(),todayDate=(new Date).toDateString();if(!this.isActiveToday()||lastExpiredDate==todayDate){if("atScheduledTime"!=startType)return!1;var todayStartTimeDateObj=new Date(todayDate+" "+this.getStartHour()+":"+this.getStartMin()+" "+this.getStartAmPm()),todayExpirationDateObj=new Date(this.getExpiration());if(todayExpirationDateObj>todayStartTimeDateObj)return!1}if("now"==startType)return lastActiveDate===todayDate;if(this.isActiveToday()){if("atScheduledTime"==startType)return API.Date.hasTimePassed(this.getStartHour(),this.getStartMin(),this.getStartAmPm());if("whenMaxTimeAllowedExceeded"==startType)return API.StayFocusd.isMaxTimeAllowedExceeded()}},activate:function(){var startDate=this.hasScheduledTime()?API.Date.getTodayDateObj(this.getStartHour(),this.getStartMin(),this.getStartAmPm()):new Date;this.settings.expiration=startDate.getTime()+API.Date.hoursToMilliseconds(this.getBlockLength()),this.settings.lastActiveDate=(new Date).toDateString(),this.settings.lastExpiredDate=null,this.settings.isCurrentlyActive=!0,this.saveSettings(this.settings),clearInterval(this.timer)},deactivate:function(){this.settings.lastExpiredDate=(new Date).toDateString(),this.settings.isCurrentlyActive=!1,this.saveSettings(this.settings)},isExpired:function(){if(null===this.getExpiration())return!0;var nowDate=new Date,expirationDate=new Date(this.getExpiration());return nowDate>expirationDate},isBlockable:function(isBlacklisted,isWhitelisted){if(this.isActive()===!1)return!1;var blockType=this.getBlockType();switch(blockType){case"all":return!0;case"allExceptAllowed":return!isWhitelisted;case"blocked":return isBlacklisted&&!isWhitelisted;default:return!1}},hasScheduledTime:function(){return"atScheduledTime"==this.getStartType()},getSecondsUntilActive:function(){return API.Date.secondsUntilTime(this.getStartHour(),this.getStartMin(),this.getStartAmPm())},hasSmartBomb:function(){return"smartBomb"==this.getContentType()},isCurrentlyActive:function(){return void 0==this.settings.isCurrentlyActive?!1:this.settings.isCurrentlyActive},getSmartBomb:function(){return void 0==this.settings.smartBomb?{}:this.settings.smartBomb},getContentType:function(){return void 0==this.settings.contentType?"wholeSite":this.settings.contentType},getExpiration:function(){return void 0==this.settings.expiration?null:parseInt(this.settings.expiration,10)},getLastActiveDate:function(){return void 0==this.settings.lastActiveDate?null:this.settings.lastActiveDate},getLastExpiredDate:function(){return void 0==this.settings.lastExpiredDate?null:this.settings.lastExpiredDate},getBlockType:function(){return void 0==this.settings.blockType?"all":this.settings.blockType},getBlockLength:function(){return void 0==this.settings.blockLength?1:parseFloat(this.settings.blockLength)},getStartType:function(){return void 0==this.settings.startType?"now":this.settings.startType},getStartHour:function(){return void 0==this.settings.startHour?"00":this.settings.startHour},getStartMin:function(){return void 0==this.settings.startMin?"00":this.settings.startMin},getStartAmPm:function(){return void 0==this.settings.startAmPm?"am":this.settings.startAmPm},getFrequency:function(){return void 0==this.settings.frequency?null:this.settings.frequency},getActiveDays:function(){return void 0==this.settings.activeDays?[]:this.settings.activeDays},tick:function(){if(this.hasScheduledTime()&&!this.isActive()){var secondsUntilNuclear=this.getSecondsUntilActive();Notification.isset(secondsUntilNuclear)&&Notification.show("nuclear")}return!0}};return NuclearOption});